buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.3"
    }
}

apply plugin: 'kotlin-platform-jvm'
apply plugin: 'kotlinx-serialization'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'application'

mainClassName = "mmo.server.BackendKt"

sourceSets {
    main.kotlin.srcDirs += "src"
    main.resources.srcDirs += "resources"
    main.resources.srcDirs += "../resources"
    test.kotlin.srcDirs += "test"
    test.resources.srcDirs += "testresources"
}

dependencies {
    expectedBy project(":mmo")

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

    compile "com.soywiz:korge:$korge_version"

    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-client-apache:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"

    compile "ch.qos.logback:logback-classic:$logback_version"

    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
sourceCompatibility = "1.8"

task runClient(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "mmo.client.FrontendJvmKt"
    args ""
}

task runServer(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "mmo.server.BackendKt"
    args ""
}

kotlin.experimental.coroutines "enable"

shadowJar {
    baseName = 'mmo-server'
    mainClassName = "mmo.server.BackendKt"
    classifier = null
    version = null
}
